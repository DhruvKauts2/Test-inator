{"ast":null,"code":"var _jsxFileName = \"/home/kauts/Projects/Test-inator/testinator-frontend/src/ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatApp() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [excelFile, setExcelFile] = useState(null); // Store the Excel file data\n\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Make an API request to your Express.js server\n    try {\n      const response = await axios.post(\"http://localhost:5000/query-gpt\", {\n        inputText: inputText\n      });\n\n      // Handle the API response\n      setResponse(response.data.response);\n\n      // Store the Excel file data\n      setExcelFile(response.data.excelFile);\n    } catch (error) {\n      console.error(\"Error querying the API:\", error);\n    }\n  };\n  const handleDownloadExcel = () => {\n    if (excelFile) {\n      // Create a blob from the Excel file data\n      const blob = new Blob([excelFile], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      });\n\n      // Create a URL for the blob\n      const url = window.URL.createObjectURL(blob);\n\n      // Create a temporary anchor element and trigger a click to download the file\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"test_cases.xlsx\";\n      a.click();\n\n      // Release the blob and URL\n      window.URL.revokeObjectURL(url);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat with GPT-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Type your message...\",\n        value: inputText,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }, this), excelFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadExcel,\n        children: \"Download Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"fxKSBRdPqDBoeRNSV1C3iJfCPPw=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatApp","_s","inputText","setInputText","response","setResponse","excelFile","setExcelFile","handleInputChange","e","target","value","handleSubmit","preventDefault","post","data","error","console","handleDownloadExcel","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","className","onClick","_c","$RefreshReg$"],"sources":["/home/kauts/Projects/Test-inator/testinator-frontend/src/ChatApp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction ChatApp() {\n  const [inputText, setInputText] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [excelFile, setExcelFile] = useState(null); // Store the Excel file data\n\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Make an API request to your Express.js server\n    try {\n      const response = await axios.post(\"http://localhost:5000/query-gpt\", {\n        inputText: inputText,\n      });\n\n      // Handle the API response\n      setResponse(response.data.response);\n\n      // Store the Excel file data\n      setExcelFile(response.data.excelFile);\n    } catch (error) {\n      console.error(\"Error querying the API:\", error);\n    }\n  };\n\n  const handleDownloadExcel = () => {\n    if (excelFile) {\n      // Create a blob from the Excel file data\n      const blob = new Blob([excelFile], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n\n      // Create a URL for the blob\n      const url = window.URL.createObjectURL(blob);\n\n      // Create a temporary anchor element and trigger a click to download the file\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"test_cases.xlsx\";\n      a.click();\n\n      // Release the blob and URL\n      window.URL.revokeObjectURL(url);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chat with GPT-3</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          placeholder=\"Type your message...\"\n          value={inputText}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n      {response && <div className=\"response\">{response}</div>}\n      {excelFile && (\n        <div>\n          <button onClick={handleDownloadExcel}>Download Excel</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ChatApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}